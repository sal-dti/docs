openapi: 3.0.3
info:
  title: DeepReel API Documentation (latest)
  version: 1.0.0
  description: DeepReel API OpenApi Specification
  x-logo:
    url: /icons/deepreel-logo-main.png
paths:
  /project/assets/avatar/:
    get:
      operationId: List Avatars
      description:
        Returns a list of available Avatars either public or associated
        with the authenticated user.
      parameters:
        - in: query
          name: gender
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
          description: |-
            Filter the Avatars based on the Gender. Available Options:
            * `1` - Male
            * `2` - Female
            * `3` - Non Binary
        - in: query
          name: is_custom
          schema:
            type: boolean
          description: Filter only the custom avatars.
        - in: query
          name: language
          schema:
            type: integer
          description: Id of the language. Filter the Avatars based on the language.
        - in: query
          name: name
          schema:
            type: string
          description: Filter the Avatars based on the name (partial-match and case-insensitive).
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiAvatarList"
          description: ""
  /project/assets/avatar/{id}/:
    get:
      operationId: Get Avatar
      description: Returns the detail of the Avatar.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this avatar.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiAvatar"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/generate_audio_from_text/:
    post:
      operationId: Create an Audio
      description: Generate Audio from text.
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateAudioRequest"
        required: true
      security:
        - apiKeyAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateAudioResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/generate_avatar_from_video/:
    post:
      operationId: Generate Avatar from Video
      description: Generate an AI avatar from video file or url.
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAvatarFromUrlRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateAvatarFromFileRequest"
        required: true
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAvatarResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/generate_video_from_audio/:
    post:
      operationId: Generate Video from Audio
      description: Generate an AI avatar video from an audio file or url.
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateVideoFromAudioUrlRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/GenerateVideoFromAudioFileRequest"
        required: true
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateVideoResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/generate_video_from_text/:
    post:
      operationId: Generate Video from text
      description: Generate an AI avatar video from text.
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateVideoFromTextRequest"
        required: true
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateVideoResponse"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/language/:
    get:
      operationId: List Languages
      description: Returns a list of languages associated with the Avatar
      parameters:
        - in: query
          name: avatar_id
          schema:
            type: string
            format: uuid
          description: Languagues associated with the avatar
          examples:
            Example-avatarId:
              value: 1ba08abc-b551-4893-b816-f072eb6565c4
              summary: Example avatar id
        - in: query
          name: voice_id
          schema:
            type: string
            format: uuid
          description: Languages associated with the voice
          examples:
            Example-voiceId:
              value: 1ba08abc-b551-4893-b816-f072eb6565c4
              summary: Example voice id
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiLanguage"
          description: ""
  /project/assets/user_audio/:
    get:
      operationId: List history of generated audios
      description: List of generate audios associated with the authenticated user.
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApiUserVoiceAudiosList"
          description: ""
  /project/assets/user_audio/{id}/:
    get:
      operationId: Get asset from audio history
      description: Get audio and script associated with a generated audio.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user voice audios.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiUserVoiceAudios"
          description: ""
    delete:
      operationId: Delete asset from audio history
      description: Delete a generated audio.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this user voice audios.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "204":
          description: No response body
  /project/assets/user_voice/:
    get:
      operationId: List Voices
      description: Returns a list of Voices associated with tehe authenticated user.
      parameters:
        - in: query
          name: age_group
          schema:
            type: string
            nullable: true
            enum:
              - Adult
              - Old
              - Young
          description: |-
            Filter based on the age group of the voice.

            * `Young` - Young
            * `Adult` - Adult
            * `Old` - Old
        - in: query
          name: gender
          schema:
            type: string
            nullable: true
            enum:
              - Female
              - Male
          description: |-
            Filter based on the gender of voice.

            * `Male` - Male
            * `Female` - Female
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApiVoiceList"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/user_voice/{id}/:
    get:
      operationId: Get Voice Properties
      description: Returns properties of the voice.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this voice.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiVoice"
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /project/assets/video/:
    get:
      operationId: List Videos
      description: Get history of generated videos
      parameters:
        - in: query
          name: order
          schema:
            type: string
            enum:
              - -created_at
              - created_at
          description: |-
            Sort by the date of video creation (Ascending/Descending).
            If not provided, the resultset will be sort by newest to oldest.
            * `created_at` - Sort by ascending created at date (oldest to newest)
            * `-created_at` - Sort by decending created at date (newest to oldest)
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiVideoList"
          description: ""
  /project/assets/video/{id}/:
    get:
      operationId: Get Video
      description: Get audio, video and script associated with the generated video.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this video.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiVideo"
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
    put:
      operationId: Update Video
      description: The update action updates a single object selected by `id`.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this video.
          required: true
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: New title for the video.
                  nullable: false
              required:
                - title
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiVideo"
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
    delete:
      operationId: Delete Video
      description: The delete action deletes a single object selected by `id`.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this video.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "204":
          description: No response body
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
  /subscription/active/:
    get:
      operationId: Active Subscription Info
      description: Gets all information about the users active subscription.
      tags:
        - subscription
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveSubscription"
          description: ""
  /user/info/:
    get:
      operationId: Get User Info
      description: Returns authenticated user information.
      tags:
        - user
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_info"
          description: ""
  /user/webhook/:
    get:
      operationId: Get Registered Webhook
      description: Gets detail of the registered webhook
      tags:
        - user
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWebhook"
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
    post:
      operationId: Register a Webhook
      description: Register a webhook to listen to the events.
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterWebHookRequest"
        required: true
      security:
        - apiKeyAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWebhook"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  detail:
                    type: object
                    nullable: true
                    description: Detail of the error message.
          description: ""
    delete:
      operationId: Delete a registered Webhook
      description: Delete a registered webhook.
      tags:
        - user
      security:
        - apiKeyAuth: []
      responses:
        "204":
          description: No response body
  /user/webhook/events/:
    get:
      operationId: List available webhook events
      description: list all supported webhook events
      tags:
        - user
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscribable_events"
          description: ""
components:
  schemas:
    ActiveSubscription:
      type: object
      properties:
        subscription:
          $ref: "#/components/schemas/ActiveSubscriptionDetail"
    ActiveSubscriptionDetail:
      type: object
      properties:
        plan:
          allOf:
            - $ref: "#/components/schemas/PartialPlan"
          readOnly: true
          description: Current subscription plan.
        plan_expires_at:
          type: string
          format: date-time
          description: DateTime when current subscription plan will expire.
        total_credits:
          type: integer
          description:
            Total credits available in current subscription plan (Monthly
            or Annually).
        credits_used:
          type: integer
          description: Credits used in current subscription plan (Monthly or Annually).
        extra_credits_charges:
          type: integer
          description:
            Charges to consume overage credits on current subscription
            plan.
        total_custom_avatar_credits:
          type: integer
          description:
            Total custom avatar credits available in current subscription
            plan (Monthly or Annually).
        custom_avatar_credits_left:
          type: integer
          description:
            Custom avatar credits used in current subscription plan (Monthly
            or Annually).
        scheduled_subscription:
          allOf:
            - $ref: "#/components/schemas/PartialScheduledSubscription"
          readOnly: true
          description: Scheduled subscription plan.
      required:
        - credits_used
        - custom_avatar_credits_left
        - extra_credits_charges
        - plan
        - plan_expires_at
        - scheduled_subscription
        - total_credits
        - total_custom_avatar_credits
    AgeGroupEnum:
      enum:
        - Young
        - Adult
        - Old
      type: string
      description: |-
        * `Young` - Young
        * `Adult` - Adult
        * `Old` - Old
    ApiAvatar:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the Avatar.
        name:
          type: string
          readOnly: true
          description: Name of the Avatar.
        gender:
          allOf:
            - $ref: "#/components/schemas/GenderB68Enum"
          readOnly: true
          description: |-
            Gender of the Avatar.

            * `1` - Male
            * `2` - Female
            * `3` - Non Binary
        cropped_asset:
          type: string
          format: uri
          readOnly: true
          description: URL for the cropped asset.
        full_asset:
          type: string
          format: uri
          readOnly: true
          description: URL for the full asset.
        is_pending:
          type: boolean
          readOnly: true
          description: True if the Avatar has been generated else False.
        is_custom:
          type: boolean
          readOnly: true
          description: True if the Avatar is custom generated else False.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: DateTime when the Avatar was created.
        is_colorcode_bg_supported:
          type: boolean
          readOnly: true
          description: True if the Avatar supports a color code background else False.
        languages:
          type: array
          items:
            $ref: "#/components/schemas/AvatarSupportedLanguage"
          readOnly: true
          description: List of languages supported by the Avatar.
      required:
        - created_at
        - cropped_asset
        - full_asset
        - gender
        - id
        - is_colorcode_bg_supported
        - is_custom
        - is_pending
        - languages
        - name
    ApiAvatarList:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the Avatar.
        name:
          type: string
          readOnly: true
          description: Name of the Avatar.
        gender:
          allOf:
            - $ref: "#/components/schemas/GenderB68Enum"
          readOnly: true
          description: |-
            Gender of the Avatar.

            * `1` - Male
            * `2` - Female
            * `3` - Non Binary
      required:
        - gender
        - id
        - name
    ApiLanguage:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: integer
          readOnly: true
          description: Unique Identifier for the language
        name:
          type: string
          readOnly: true
          description: Name of the language.
      required:
        - id
        - name
    ApiUserVoiceAudios:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          description: Unique Identifier of the Audio.
        script_plain_text:
          type: string
          description: Plain text script used to create the video.
        voice_id:
          type: string
          format: uuid
          readOnly: true
          description: Id of the voice used to generate the Audio.
        language_id:
          type: integer
          readOnly: true
          description: Id of the language used to generate the Audio.
        stability:
          type: number
          format: double
          description: Expressiveness of speaking style.
        style_exaggeration:
          type: number
          format: double
          description: Level of exaggeration of the speaking style.
        audio_download_url:
          type: string
          format: uri
      required:
        - audio_download_url
        - id
        - language_id
        - script_plain_text
        - stability
        - style_exaggeration
        - voice_id
    ApiVideo:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the Video.
        title:
          type: string
          readOnly: true
          description: Name of the Video.
        video_status:
          allOf:
            - $ref: "#/components/schemas/VideoStatusEnum"
          readOnly: true
          description: |-
            Status of the video i.e. whether it's completed or failed.

            * `Pending` - Pending
            * `Complete` - Complete
            * `Queued` - Queued
            * `Processing` - Processing
            * `Failed` - Failed
        avatar:
          allOf:
            - $ref: "#/components/schemas/PartialAvatar"
          readOnly: true
          description: Avatar used for video generation.
        language:
          allOf:
            - $ref: "#/components/schemas/Language"
          readOnly: true
          description:
            Language used to generated the video. `null` incase video was
            created from audio.
        creator:
          allOf:
            - $ref: "#/components/schemas/Creator"
          readOnly: true
          description: Detail of the user who generated the video.
        script_plain_text:
          type: string
          readOnly: true
          description:
            Plain text script used to create the video. `null` incase video
            was created from audio.
        background_color:
          type: string
          readOnly: true
          description:
            "The background color video. A six-bit hex color code starts
            with #. (e.g. #DRDRDR)"
        aspect_ratio:
          allOf:
            - $ref: "#/components/schemas/AspectRatioEnum"
          readOnly: true
          description: |-
            Aspect ratio of the video.

            * `16:9` - 16:9 - Standard widescreen
            * `9:16` - 9:16 - Vertical
            * `4:3` - 4:3 - Traditional TV format
            * `1:1` - 1:1 - Square
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: DateTime when the video generation was requested.
        audio_download_url:
          type: string
          format: uri
          readOnly: true
          description:
            "Url of the audio track used to generate the video.                                                _Note:
            Link will be valid for the next 60 minutes._"
        video_duration:
          type: integer
          readOnly: true
          description: Duration of the generated video in seconds.
        video_download_url:
          type: string
          format: uri
          readOnly: true
          description:
            "URL of the generated video.                                                _Note:
            Link will be valid for the next 60 minutes._"
      required:
        - aspect_ratio
        - audio_download_url
        - avatar
        - background_color
        - created_at
        - creator
        - id
        - language
        - script_plain_text
        - title
        - video_download_url
        - video_duration
        - video_status
    ApiVideoList:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the Video.
        title:
          type: string
          readOnly: true
          description: Name of the Video.
        video_status:
          allOf:
            - $ref: "#/components/schemas/VideoStatusEnum"
          readOnly: true
          description: |-
            Status of the video i.e. whether it's completed or failed.

            * `Pending` - Pending
            * `Complete` - Complete
            * `Queued` - Queued
            * `Processing` - Processing
            * `Failed` - Failed
        creator:
          allOf:
            - $ref: "#/components/schemas/Creator"
          readOnly: true
          description: Detail of the user who generated the video.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: DateTime when the video generation was requested.
      required:
        - created_at
        - creator
        - id
        - title
        - video_status
    ApiVoice:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the voice.
        name:
          type: string
          readOnly: true
          description: Name of the voice.
        gender:
          allOf:
            - $ref: "#/components/schemas/ApiVoiceGenderEnum"
          readOnly: true
          description: |-
            Gender of the voice.

            * `Male` - Male
            * `Female` - Female
        age_group:
          allOf:
            - $ref: "#/components/schemas/AgeGroupEnum"
          readOnly: true
          description: |-
            Age group of the voice

            * `Young` - Young
            * `Adult` - Adult
            * `Old` - Old
        voice_accent:
          type: string
          readOnly: true
          description: Accent of the voice.
        stability:
          type: number
          format: double
          readOnly: true
          description: Expressiveness of speaking style.
        style_exaggeration:
          type: number
          format: double
          readOnly: true
          description: Level of exaggeration of the speaking style.
        sample_audio_url:
          type: string
          format: uri
          readOnly: true
          description:
            "URL of the sample audio of the voice.                                              _Note:
            Link will be valid for the next 60 minutes._"
      required:
        - age_group
        - gender
        - id
        - name
        - sample_audio_url
        - stability
        - style_exaggeration
        - voice_accent
    ApiVoiceGenderEnum:
      enum:
        - Male
        - Female
      type: string
      description: |-
        * `Male` - Male
        * `Female` - Female
    AspectRatioEnum:
      enum:
        - "16:9"
        - "9:16"
        - "4:3"
        - "1:1"
      type: string
      description: |-
        * `16:9` - 16:9 - Standard widescreen
        * `9:16` - 9:16 - Vertical
        * `4:3` - 4:3 - Traditional TV format
        * `1:1` - 1:1 - Square
    AvatarSupportedLanguage:
      type: object
      properties:
        id:
          type: integer
          description: Unique Identifier of the Language.
        name:
          type: string
          description: Name of the language.
        is_default:
          type: boolean
          description: True if it is the default language of the Avatar.
      required:
        - id
        - is_default
        - name
    CreateAvatarFromFileRequest:
      type: object
      properties:
        video_1:
          type: string
          format: uri
          description: A video file (mp4/mov/mkv/avi/wav). Size max limit is 500 mb.
        video_2:
          type: string
          format: uri
          description: A video file (mp4/mov/mkv/avi/wav). Size max limit is 500 mb.
      required:
        - video_1
        - video_2
    CreateAvatarFromUrlRequest:
      type: object
      properties:
        video_1:
          type: string
          format: uri
          description:
            A public HTTPS url of the video file (mp4). Size max limit
            is 500 mb.
        video_2:
          type: string
          format: uri
          description:
            A public HTTPS url of the video file (mp4). Size max limit
            is 500 mb.
      required:
        - video_1
        - video_2
    CreateAvatarResponse:
      type: object
      properties:
        avatar_id:
          type: string
          format: uuid
          description: Unique identifier of the avatar.
      required:
        - avatar_id
    Creator:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the user.
        name:
          type: string
          readOnly: true
          description: Name of the user.
      required:
        - id
        - name
    GenderB68Enum:
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: |-
        * `1` - Male
        * `2` - Female
        * `3` - Non Binary
    GenerateAudioRequest:
      type: object
      properties:
        slate_script:
          type: array
          items:
            $ref: "#/components/schemas/NodeParagraph"
        voice_id:
          type: string
          format: uuid
          description: The voice to be used to generate the audio
        language_id:
          type: integer
          default: 94
          description:
            Language used to generate the audio. Language Id for `English
            - Default (en-us)` is `94`
        stability:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.5
          description:
            This controls the level of variation in generated audio.             Low
            stability will increase expressiveness of speech while high             stability
            will lower expressiveness but increase the predictability of how the script
            is spoken.
        style_exaggeration:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.0
          description:
            Level of exaggeration of the speaking style. Available only
            for custom voices.             Higher values will make increase similarity
            of cloned voice but may cause the audio to be less stable.
      required:
        - slate_script
        - voice_id
    GenerateAudioResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Id of the generated audio.
        download_url:
          type: string
          format: uri
          description:
            "URL to download the audio.                                         _Note:
            URL will we valid for 60 minutes only._"
      required:
        - download_url
        - id
    GenerateVideoFromAudioFileRequest:
      type: object
      properties:
        avatar_id:
          type: string
          format: uuid
          description: The avatar to be used to generate the video
        background_color:
          type: string
          default: "#3D3D3D"
          description:
            "The background color video. A six-bit hex color code starts
            with #. (e.g. #DRDRDR)                                      NOTE: The
            `background_image` will get preference over `background_color` if both
            are specified."
        background_image:
          type: string
          format: uri
          description: A public HTTPS link of an image (jpg/jpeg/png).
        aspect_ratio:
          allOf:
            - $ref: "#/components/schemas/AspectRatioEnum"
          description: |-
            Aspect ratio of the video.

            * `16:9` - 16:9 - Standard widescreen
            * `9:16` - 9:16 - Vertical
            * `4:3` - 4:3 - Traditional TV format
            * `1:1` - 1:1 - Square
        title:
          type: string
          description: Title of the video. Length should be less than 100 characters.
        audio_file:
          type: string
          format: uri
          description: An audio file. (mp3). Size max limit is 5 mb.
      required:
        - aspect_ratio
        - audio_file
        - avatar_id
    GenerateVideoFromAudioUrlRequest:
      type: object
      properties:
        avatar_id:
          type: string
          format: uuid
          description: The avatar to be used to generate the video
        background_color:
          type: string
          default: "#3D3D3D"
          description:
            "The background color video. A six-bit hex color code starts
            with #. (e.g. #DRDRDR)                                      NOTE: The
            `background_image` will get preference over `background_color` if both
            are specified."
        background_image:
          type: string
          format: uri
          description: A public HTTPS link of an image (jpg/jpeg/png).
        aspect_ratio:
          allOf:
            - $ref: "#/components/schemas/AspectRatioEnum"
          description: |-
            Aspect ratio of the video.

            * `16:9` - 16:9 - Standard widescreen
            * `9:16` - 9:16 - Vertical
            * `4:3` - 4:3 - Traditional TV format
            * `1:1` - 1:1 - Square
        title:
          type: string
          description: Title of the video. Length should be less than 100 characters.
        audio_url:
          type: string
          format: uri
          description: A public HTTPS link of an audio file (mp3).
      required:
        - aspect_ratio
        - audio_url
        - avatar_id
    GenerateVideoFromTextRequest:
      type: object
      properties:
        avatar_id:
          type: string
          format: uuid
          description: The avatar to be used to generate the video
        background_color:
          type: string
          default: "#3D3D3D"
          description:
            "The background color video. A six-bit hex color code starts
            with #. (e.g. #DRDRDR)                                      NOTE: The
            `background_image` will get preference over `background_color` if both
            are specified."
        background_image:
          type: string
          format: uri
          description: A public HTTPS link of an image (jpg/jpeg/png).
        aspect_ratio:
          allOf:
            - $ref: "#/components/schemas/AspectRatioEnum"
          description: |-
            Aspect ratio of the video.

            * `16:9` - 16:9 - Standard widescreen
            * `9:16` - 9:16 - Vertical
            * `4:3` - 4:3 - Traditional TV format
            * `1:1` - 1:1 - Square
        title:
          type: string
          description: Title of the video. Length should be less than 100 characters.
        slate_script:
          type: array
          items:
            $ref: "#/components/schemas/NodeParagraph"
        language_id:
          type: integer
          default: 94
          description:
            Language used to generate the audio. Language Id for `English
            - Default (en-us)` is `94`
        stability:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.5
          description:
            This controls the level of variation in generated audio.             Low
            stability will increase expressiveness of speech while high             stability
            will lower expressiveness but increase the predictability of how the script
            is spoken.
        style_exaggeration:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.0
          description:
            Level of exaggeration of the speaking style. Available only
            for custom voices.             Higher values will make increase similarity
            of cloned voice but may cause the audio to be less stable.
      required:
        - aspect_ratio
        - avatar_id
        - slate_script
    GenerateVideoResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique Identifier of the video.
        estimated_completion_time:
          type: integer
          description: Video generation estimated completion time in seconds.
        message:
          type: string
          description: Extra detail.
      required:
        - id
    Language:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the Language.
        name:
          type: string
          readOnly: true
          description: Name of the Language.
      required:
        - id
        - name
    MessageResponse:
      type: object
      properties:
        message:
          type: string
          description: Extra detail.
    ModeEnum:
      enum:
        - month
        - year
      type: string
      description: |-
        * `month` - month
        * `year` - year
    NodeChild:
      oneOf:
        - $ref: "#/components/schemas/NodeText"
        - $ref: "#/components/schemas/NodeTag"
    NodeParagraph:
      type: object
      properties:
        type:
          allOf:
            - $ref: "#/components/schemas/NodeParagraphTypeEnum"
          readOnly: true
        children:
          type: array
          items:
            $ref: "#/components/schemas/NodeChild"
      required:
        - children
        - type
    NodeParagraphTypeEnum:
      enum:
        - paragraph
      type: string
      description: "* `paragraph` - paragraph"
    NodeTag:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/NodeTagTypeEnum"
        value:
          type: string
      required:
        - type
        - value
    NodeTagTypeEnum:
      enum:
        - pause
        - variable
      type: string
      description: |-
        * `pause` - pause
        * `variable` - variable
    NodeText:
      type: object
      properties:
        text:
          type: string
        speedValue:
          type: integer
          readOnly: true
        volumeValue:
          type: string
          readOnly: true
        pitchValue:
          type: string
          readOnly: true
        customPronounciation:
          type: string
          readOnly: true
      required:
        - text
    PaginatedApiUserVoiceAudiosList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
        previous:
          type: string
          nullable: true
          format: uri
        results:
          type: array
          items:
            $ref: "#/components/schemas/ApiUserVoiceAudios"
    PaginatedApiVoiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
        previous:
          type: string
          nullable: true
          format: uri
        results:
          type: array
          items:
            $ref: "#/components/schemas/ApiVoice"
    PartialAvatar:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique Identifier of the Avatar.
        name:
          type: string
          readOnly: true
          description: Name of the Avatar.
      required:
        - id
        - name
    PartialPlan:
      type: object
      properties:
        name:
          type: string
          description: Name of the plan.
        mode:
          allOf:
            - $ref: "#/components/schemas/ModeEnum"
          description: |-
            Mode of the plan.

            * `month` - month
            * `year` - year
        usage_based_allowed:
          type: boolean
          description:
            "`True` if usage based billing is supported on this plan else
            `False`."
      required:
        - mode
        - name
        - usage_based_allowed
    PartialScheduledSubscription:
      type: object
      properties:
        plan:
          type: string
          description: Name of the plan.
        mode:
          allOf:
            - $ref: "#/components/schemas/ModeEnum"
          description: |-
            Mode of the plan.

            * `month` - month
            * `year` - year
        start_date:
          type: string
          format: date-time
          description: DateTime when this plan will be activated.
      required:
        - mode
        - plan
        - start_date
    RegisterWebHookRequest:
      type: object
      properties:
        endpoint:
          type: string
          description: URL of the webhook endpoint to receive events
        events:
          type: array
          items:
            type: string
            description: Name of the event.
          nullable: true
          description:
            List of subscribable events your webhook wants to listen to.                                             `null`
            means to subscribe to all the available events.
      required:
        - endpoint
        - events
    UserWebhook:
      type: object
      description: Allows to specify fields to be included
      properties:
        endpoint:
          type: string
          format: uri
          description: Endpoint to listen to the subscribed events.
        key:
          type: string
          description: Secret key to perform HTTP Signature Verification.
        events:
          type: array
          items:
            type: string
            description: Name of the event
          readOnly: true
          description: Events to be observed.
      required:
        - endpoint
        - events
        - key
    VideoStatusEnum:
      enum:
        - Pending
        - Complete
        - Queued
        - Processing
        - Failed
      type: string
      description: |-
        * `Pending` - Pending
        * `Complete` - Complete
        * `Queued` - Queued
        * `Processing` - Processing
        * `Failed` - Failed
    subscribable_events:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
            description: Name of the event.
          description: List of subscribable events your webhook can listen to.
      required:
        - data
    user_info:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique Identifier of the authenticated user.
        name:
          type: string
          description: Name of the authenticated user.
        email:
          type: string
          format: uuid
          description: Email of the authenticated user.
      required:
        - email
        - id
        - name
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description:
        "Your API key with the prefix: `dr_`. This is required by all endpoints
        to access our API programatically.                             You can view
        your API Key by navigating to the account settings panel (In the bottom left
        corner click on your                             `Account` → `profile`)"
